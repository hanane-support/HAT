# 1. 프로젝트 폴더 생성 및 이동
mkdir trading_bot_app
cd trading_bot_app

# 2. 가상 환경 생성 (venv)
python -m venv venv

# 3. 가상 환경 활성화 (Windows PowerShell 기준)
.\venv\Scripts\Activate

# 생성된 가상 환경 안에만 필요한 패키지를 설치합니다.
pip install -r my_requirements.txt

# 서버 실행
uvicorn my_server:app --reload --port 9000

# 설정 웹사이트
http://127.0.0.1:8000/settings
http://61.85.61.62:8000/settings

# Vultr 서버ip 관리자 페이지
http://158.247.199.150/admin

# 캐디 실행
.\caddy run --config Caddyfile

# 서버 실행 상태 메시지
https://your.domain.com

# 로그인 페이지
https://your.domain.com/login
https://hanane.kr/login

# 인증된 후에 접근 가능한 설정 관리 페이지
https://your.domain.com/settings
https://hanane.kr/settings




# 깃허브 주소 HATB
https://github.com/hanane-support/HATB.git

# 깃 초기화
git init

# 변경사항 확인
git status

# 깃 파일추가
git add .

# 4. 변경 사항을 커밋
git commit -m "변경 사항"

# 5. GitHub에 생성한 빈 저장소의 URL을 원격 저장소로 등록
git remote add origin https://github.com/hanane-support/HATB.git

# 6. 원격 저장소(origin)의 메인(main) 브랜치로 코드 푸시
# GitHub에 따라 'master' 대신 'main' 브랜치 이름이 기본일 수 있습니다.
git push -u origin main


# 깃 한번에 (명령줄에서 새 저장소(repository)를 만드세요.)
echo "# HATB" >> README.md
git init
git add README.md
git commit -m "변경 사항"
git branch -M main
git remote add origin https://github.com/hanane-support/HATB.git
git push -u origin main

# 한번에 (명령줄에서 기존 저장소(repository)를 푸시(push)하세요.)
git remote add origin https://github.com/hanane-support/HATB.git
git branch -M main
git push -u origin main


# 깃허브 수정내역만 반영
git status
git add .
git commit -m "변경사항"
git push origin main